#include <iostream>
#include <string>
#include <cstdlib>
#include <ctime>

using namespace std;

class person {
public:
    string name;
    int health;
    int experience;
    int level;

    bool isAlive() const {
        return health > 0;
    }

    string getName() const {
        return name;
    }

    int getHealth() const {
        return health;
    }

    void takeDamage(int damage) {
        health -= damage;
        if (health < 0) {
            health = 0;
        }
    }

    void getHealed(int heal) {
        health += heal;
    }
    
    void gainXP(int xp){
        experience += xp;
    }

    virtual void attack(person& a) = 0;
    virtual void heal(person& a) = 0;
    friend void levelup(person&a);
};

class player : public person {
public:
    player(string name, int health, int level) {
        this->name = name;
        this->health = health;
        this->level = level;
        this->experience = 0;
    }

    void attack(person& a) override {
        int num = rand() % 3 + 1;
        int damage = rand() % 10 + 5 * level;
        if (num == 1) {
            a.takeDamage(damage * 2);
            cout << name << " dealt critical damage!\n" << a.getName() << " loses " << damage * 2 << " health" << endl;
            experience = experience +50;
        }
        else if (num == 2) {
            cout << a.getName() << " blocked the attack" << endl;
        }
        else if (num == 3) {
            a.takeDamage(damage);
            cout << name << " dealt damage!\n" << a.getName() << " loses " << damage << " health" << endl;
            experience = experience +30;
        }
    }

    void heal(person& a) override {
        int heal = rand() % 10 + 5 * level;
        getHealed(heal);
        cout << name << " gained " << heal << " health" << endl;
    }
    
    friend void levelup(person&a);
};

class enemy : public person {
public:
    enemy(string name, int health, int level) {
        this->name = name;
        this->health = health;
        this->level = level;
        this->experience = 0;
    }

    void attack(person& a) override {
        int num = rand() % 3 + 1;
        int damage = rand() % 10 + 5 * level;
        if (num == 1) {
            a.takeDamage(damage * 2);
            cout << name << " dealt critical damage!\n" << a.getName() << " loses " << damage * 2 << " health" << endl;
             experience = experience +50;
        }
        else if (num == 2) {
            cout << a.getName() << " blocked the attack" << endl;
        }
        else if (num == 3) {
            a.takeDamage(damage);
            cout << name << " dealt damage!\n" << a.getName() << " loses " << damage << " health" << endl;
             experience = experience +30;
        }
    }

    void heal(person& a) override {
        int heal = rand() % 10 + 5 * level;
        getHealed(heal);
        cout << name << " gained " << heal << " health" << endl;
    }
    
    friend void levelup(person&a);
};

void levelup(person&a){
        if(a.experience >= 100){
            a.level++;
            cout<<a.name<<" leveled up!"<<endl;
            int remaining_experience = a.experience - 100;
            a.experience = remaining_experience;
        }
    }

int main() {
    srand(time(0)); 

    player player1("Nazaar", 500, 3);
    enemy enemy1("Ghoul", 70, 1);
    enemy enemy2("Cursed demon", 400, 5);
    enemy enemy3("The undoing", 1000, 10);
    int choice1, choice2, choice3;
    
    cout<<"---------------"<<endl;
   do{ cout<<"Who do you wish to fight? \n1 for ghoul(level 1) \n2 for Cursed demon(level 5) \n3 for the undoing (level 10)"<<endl;
    cin>>choice2;}while(choice2<1||choice2>3);
    
    switch (choice2) {
        case 1: 
        while (player1.isAlive() && enemy1.isAlive()) {
       do{ cout << "Enter your choice: (1 for attack, 2 for heal)" << endl;
        cin >> choice1;}while(choice1 < 1 ||choice1 > 2);

        switch (choice1) {
            case 1:
                player1.attack(enemy1);
                break;
            case 2:
                player1.heal(player1); 
                break;
            default:
                cout << "Invalid input" << endl;
        }

        int choice2 = rand() % 2 + 1;

        switch (choice2) {
            case 1:
                enemy1.attack(player1);
                break;
            case 2:
                enemy1.heal(enemy1); 
                break;
            default:
                cout << "Invalid input" << endl;
        }

    levelup(player1);
    levelup(enemy1);
        cout << "Player Health: " << player1.getHealth() << ", Enemy Health: " << enemy1.getHealth() << endl;
    }

    if (player1.isAlive()) {
        cout << player1.name<<" wins!\n";
    } else {
        cout << enemy1.name<<" wins!\n";
    }
        
            break;
        
        case 2:
        while (player1.isAlive() && enemy2.isAlive()) {
       do{ cout << "Enter your choice: (1 for attack, 2 for heal)" << endl;
        cin >> choice1;}while(choice1 < 1 ||choice1 > 2);

        switch (choice1) {
            case 1:
                player1.attack(enemy2);
                break;
            case 2:
                player1.heal(player1); 
                break;
            default:
                cout << "Invalid input" << endl;
        }

        int choice2 = rand() % 2 + 1;

        switch (choice2) {
            case 1:
                enemy2.attack(player1);
                break;
            case 2:
                enemy2.heal(enemy2); 
                break;
            default:
                cout << "Invalid input" << endl;
        }

    levelup(player1);
    levelup(enemy2);
        cout << "Player Health: " << player1.getHealth() << ", Enemy Health: " << enemy2.getHealth() << endl;
    }

    if (player1.isAlive()) {
        cout << player1.name<<" wins!\n";
    } else {
        cout << enemy2.name<<" wins!\n";
    }
        
            break;
        
        case 3:
        while (player1.isAlive() && enemy3.isAlive()) {
       do{ cout << "Enter your choice: (1 for attack, 2 for heal)" << endl;
        cin >> choice1;}while(choice1 < 1 ||choice1 > 2);

        switch (choice1) {
            case 1:
                player1.attack(enemy3);
                break;
            case 2:
                player1.heal(player1); 
                break;
            default:
                cout << "Invalid input" << endl;
        }

        int choice2 = rand() % 2 + 1;

        switch (choice2) {
            case 1:
                enemy3.attack(player1);
                break;
            case 2:
                enemy3.heal(enemy3); 
                break;
            default:
                cout << "Invalid input" << endl;
        }

    levelup(player1);
    levelup(enemy3);
        cout << "Player Health: " << player1.getHealth() << ", Enemy Health: " << enemy3.getHealth() << endl;
    }

    if (player1.isAlive()) {
        cout << player1.name<<" wins!\n";
    } else {
        cout << enemy3.name<<" wins!\n";
    }
        
            break;
            
        default:
        cout<<"Invalid option;"<<endl;
    }
    

    return 0;
}
